app:
  title: VeeCode DevPortal
  baseUrl: http://localhost:3000
  analytics:
    ga4:
      measurementId: soueu
  branding:
    fullLogo: https://veecode-platform.github.io/support/logos/logo.svg
    fullLogoDark: https://veecode-platform.github.io/support/logos/logo-black.svg
    iconLogo: https://veecode-platform.github.io/support/logos/logo-mobile.png
    fullLogoWidth: 150
    theme:
      light:
        variant: "backstage"
        palette:
          navigation:
            background: "#222222" # your fixed light theme sidebar background
      dark:
        variant: "backstage"
        palette:
          navigation:
            background: "#222222" # same fixed color for dark theme
  packages: all

organization:
  name: VeeCode

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
    script-src:
      [
        "'self'",
        "'unsafe-eval'",
        'https://www.google-analytics.com',
        'https://www.googletagmanager.com',
      ]
    img-src:
      [
        "'self'",
        'data:',
        'https://www.google-analytics.com',
        'https://platform.vee.codes',
        'https://avatars.githubusercontent.com/',
        'https://veecode-platform.github.io'
      ]
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir
  auth:
    secret: mysecret
    dangerouslyDisableDefaultAuthPolicy: true
    externalAccess:
      - type: static
        options:
          # Notice: This test-token can be used to add notifications to the backstage demo application.
          # Production enironments should define a token in a more secure way that supports rotation.
          token: test-token
          subject: test-subject
  reading:
    allow:
      - host: github.com
      - host: gitlab.com
      - host: api.apis.guru
      - host: example.com
      - host: '*.mozilla.org'
auth:
  environment: development
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers:
    # See https://backstage.io/docs/auth/guest/provider
    #guest: {}
    guest:
      userEntityRef: user:default/admin
      ownershipEntityRefs: [group:default/admins]
      dangerouslyAllowOutsideDevelopment: true

# proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

# scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, User, Group]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml
    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]
    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]  
    # Local example apis
    - type: file
      target: ../../examples/apis.yaml

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]

# kubernetes:
  # see https://backstage.io/docs/features/kubernetes/configuration for kubernetes configuration options

# see https://backstage.io/docs/permissions/getting-started for more on the permission framework
permission:
  # setting this to `false` will disable permissions
  # enabled: false
  enabled: true
  permissionedPlugins:
    - catalog
    - scaffolder
  rbac:
    admin:
      users:
        - name: group:default/admins
      superUsers:
        - name: group:default/admins
# tech radar backend plugin
techRadar:
  url: https://github.com/backstage/community-plugins/blob/main/workspaces/tech-radar/plugins/tech-radar-common/src/sampleTechRadarResponse.json

# bug da veecodesignin page
platform:
  guest:
    enabled: true

dynamicPlugins:
  rootDirectory: dynamic-plugins-root
